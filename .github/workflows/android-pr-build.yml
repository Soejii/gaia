name: Android PROD AAB (Artifacts only)

on:
  push:
    branches: [ main ]     # runs when PRs are merged to main
  workflow_dispatch:        # allow manual trigger if needed

jobs:
  build-prod:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        client: [default, madani]   # build both prod variants

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Show Flutter version
        run: flutter --version

      - name: Pub get
        run: flutter pub get

      # Format but don't fail the build if it changes files
      - name: Format
        run: dart format .

      - name: Codegen
        run: flutter pub run build_runner build --delete-conflicting-outputs

      # üîë Prepare signing per client (no heredoc, no YAML indentation issues)
      - name: Prepare signing (per client)
        shell: bash
        env:
          ANDROID_KEYSTORE_BASE64_DEFAULT: ${{ secrets.ANDROID_KEYSTORE_BASE64_DEFAULT }}
          ANDROID_KEYSTORE_BASE64_MADANI:  ${{ secrets.ANDROID_KEYSTORE_BASE64_MADANI }}
        run: |
          set -euo pipefail
          mkdir -p android/app
          if [[ "${{ matrix.client }}" == "default" ]]; then
            echo "$ANDROID_KEYSTORE_BASE64_DEFAULT" | base64 -d > android/app/upload-keystore.jks
            {
              echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD_DEFAULT }}";
              echo "keyPassword=${{ secrets.ANDROID_KEY_ALIAS_PASSWORD_DEFAULT }}";
              echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS_DEFAULT }}";
              echo "storeFile=upload-keystore.jks";
            } > android/key.properties
          else
            echo "$ANDROID_KEYSTORE_BASE64_MADANI" | base64 -d > android/app/upload-keystore.jks
            {
              echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD_MADANI }}";
              echo "keyPassword=${{ secrets.ANDROID_KEY_ALIAS_PASSWORD_MADANI }}";
              echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS_MADANI }}";
              echo "storeFile=upload-keystore.jks";
            } > android/key.properties
          fi

      # üõ† Build signed PROD AAB (ENV=prod, flavor=<client>Prod)
      - name: Build PROD AAB (client=${{ matrix.client }})
        run: |
          flutter build appbundle \
            --flavor ${{ matrix.client }}Prod \
            -t lib/main.dart \
            --dart-define=CLIENT=${{ matrix.client }} \
            --dart-define=ENV=prod

      # ‚¨ÜÔ∏è Upload AAB as downloadable artifact
      - name: Upload PROD AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.client }}-prod-aab
          path: build/app/outputs/bundle/**/app-*-release.aab
          if-no-files-found: error
