plugins {
    id "com.android.application"
    id "kotlin-android" // ok; later you can switch to org.jetbrains.kotlin.android
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
  namespace = "com.example.gaia"
  compileSdk = flutter.compileSdkVersion
  ndkVersion = flutter.ndkVersion

  compileOptions {
    // when you upgrade toolchain, bump to Java 17
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }
  kotlinOptions { jvmTarget = JavaVersion.VERSION_1_8.toString() }

  defaultConfig {
    applicationId = "com.example.gaia"
    minSdk = flutter.minSdkVersion
    targetSdk = flutter.targetSdkVersion
    versionCode = flutter.versionCode
    versionName = flutter.versionName
  }

  // ðŸ”‘ Load signing props safely (no imports needed)
  def keystoreProperties = new Properties()
  def keystorePropertiesFile = rootProject.file('key.properties')
  if (keystorePropertiesFile.exists()) {
      keystorePropertiesFile.withInputStream { stream ->
          keystoreProperties.load(stream)
      }
  }

  signingConfigs {
    release {
      if (keystorePropertiesFile.exists()) {
        storeFile file(keystoreProperties['storeFile'] ?: 'upload-keystore.jks')
        storePassword keystoreProperties['storePassword']
        keyAlias keystoreProperties['keyAlias']
        keyPassword keystoreProperties['keyPassword']
      }
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release   // âœ… use your release key
      // minifyEnabled true
      // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    debug {
      // default debug keystore
    }
  }

  // define dimensions cleanly
  flavorDimensions "client", "env"

  productFlavors {
    create("default") {
      dimension "client"
      applicationId "com.sidigs.murid"
      resValue "string", "app_name", "Sidigs Murid"
      manifestPlaceholders = [ appAuthRedirectScheme: "gaiaapp" ]
    }
    create("madani") {
      dimension "client"
      applicationId "com.sidigs.madani"
      resValue "string", "app_name", "SIDIGS Madani"
      manifestPlaceholders = [ appAuthRedirectScheme: "gaiaapp" ]
    }
    create("dev") {
      dimension "env"
      applicationIdSuffix ".dev"
      versionNameSuffix "-dev"
    }
    create("prod") {
      dimension "env"
    }
  }
}

flutter {
  source = "../.."
}
